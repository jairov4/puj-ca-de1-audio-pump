	component system_design is
		port (
			audio0_ADCDAT     : in    std_logic                     := 'X';             -- ADCDAT
			audio0_ADCLRC     : in    std_logic                     := 'X';             -- ADCLRC
			audio0_DACDAT     : out   std_logic;                                        -- DACDAT
			audio0_DACLRC     : in    std_logic                     := 'X';             -- DACLRC
			audio0_BCLK       : in    std_logic                     := 'X';             -- BCLK
			sevenseg0_oSEG0   : out   std_logic_vector(6 downto 0);                     -- oSEG0
			sevenseg0_oSEG1   : out   std_logic_vector(6 downto 0);                     -- oSEG1
			sevenseg0_oSEG2   : out   std_logic_vector(6 downto 0);                     -- oSEG2
			sevenseg0_oSEG3   : out   std_logic_vector(6 downto 0);                     -- oSEG3
			sevenseg0_oSEG4   : out   std_logic_vector(6 downto 0);                     -- oSEG4
			sevenseg0_oSEG5   : out   std_logic_vector(6 downto 0);                     -- oSEG5
			sevenseg0_oSEG6   : out   std_logic_vector(6 downto 0);                     -- oSEG6
			sevenseg0_oSEG7   : out   std_logic_vector(6 downto 0);                     -- oSEG7
			sram0_DQ          : inout std_logic_vector(15 downto 0) := (others => 'X'); -- DQ
			sram0_ADDR        : out   std_logic_vector(17 downto 0);                    -- ADDR
			sram0_UB_N        : out   std_logic;                                        -- UB_N
			sram0_LB_N        : out   std_logic;                                        -- LB_N
			sram0_WE_N        : out   std_logic;                                        -- WE_N
			sram0_CE_N        : out   std_logic;                                        -- CE_N
			sram0_OE_N        : out   std_logic;                                        -- OE_N
			sdram0_addr       : out   std_logic_vector(11 downto 0);                    -- addr
			sdram0_ba         : out   std_logic_vector(1 downto 0);                     -- ba
			sdram0_cas_n      : out   std_logic;                                        -- cas_n
			sdram0_cke        : out   std_logic;                                        -- cke
			sdram0_cs_n       : out   std_logic;                                        -- cs_n
			sdram0_dq         : inout std_logic_vector(15 downto 0) := (others => 'X'); -- dq
			sdram0_dqm        : out   std_logic_vector(1 downto 0);                     -- dqm
			sdram0_ras_n      : out   std_logic;                                        -- ras_n
			sdram0_we_n       : out   std_logic;                                        -- we_n
			avlm0_readdata    : out   std_logic_vector(31 downto 0);                    -- readdata
			avlm0_writedata   : in    std_logic_vector(31 downto 0) := (others => 'X'); -- writedata
			avlm0_read        : in    std_logic                     := 'X';             -- read
			avlm0_write       : in    std_logic                     := 'X';             -- write
			avlm0_address     : in    std_logic_vector(31 downto 0) := (others => 'X'); -- address
			avlm0_waitrequest : out   std_logic;                                        -- waitrequest
			avlm0_clk         : out   std_logic;                                        -- clk
			avlm0_reset       : out   std_logic;                                        -- reset
			sdram_clk_clk     : out   std_logic;                                        -- clk
			clk_clk           : in    std_logic                     := 'X';             -- clk
			areset_export     : in    std_logic                     := 'X';             -- export
			locked_export     : out   std_logic;                                        -- export
			phasedone_export  : out   std_logic;                                        -- export
			i2c0_scl_pad_io   : inout std_logic                     := 'X';             -- scl_pad_io
			i2c0_sda_pad_io   : inout std_logic                     := 'X';             -- sda_pad_io
			pio0_export       : inout std_logic_vector(31 downto 0) := (others => 'X'); -- export
			mclk_clk          : out   std_logic;                                        -- clk
			reset_reset       : in    std_logic                     := 'X'              -- reset
		);
	end component system_design;

